{"ast":null,"code":"var _jsxFileName = \"/home/coder/high-score-tables/src/tables.js\";\nimport React from 'react';\nimport allCountryScores from './scores';\nimport './tables.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tables() {\n  const sortCountryAlpabetically = allCountryScores.sort((a, b) => a.name.localeCompare(b.name));\n  const table = allCountryScores.map((country, index) => {\n    const sortScore = country.scores.sort((a, b) => b.s - a.s);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"High scores:\", country.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sortScore.map((score, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: score.n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: score.s\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: table\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n_c = Tables;\nexport default Tables;\nvar _c;\n$RefreshReg$(_c, \"Tables\");","map":{"version":3,"names":["React","allCountryScores","jsxDEV","_jsxDEV","Tables","sortCountryAlpabetically","sort","a","b","name","localeCompare","table","map","country","index","sortScore","scores","s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","score","key","n","_c","$RefreshReg$"],"sources":["/home/coder/high-score-tables/src/tables.js"],"sourcesContent":["import React from 'react'\nimport allCountryScores from './scores'\nimport './tables.css'\n\n\nfunction Tables(){\n    const sortCountryAlpabetically = allCountryScores.sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n    const table = allCountryScores.map((country, index) => {\n     const sortScore = country.scores.sort((a, b) => b.s - a.s);\n    \n    return (<div className=\"table\" key={index}>\n      <table>\n        <thead>\n          <tr>\n            <th>High scores:{country.name}</th>\n          </tr>\n        </thead>\n        <tbody>\n        {sortScore.map((score, key)=> (\n            <tr key={key}>\n              <td>{score.n}</td>\n              <td>{score.s}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n    )\n    });\n\n  return <div>{table}</div>;\n}\n\n\n\n\n\nexport default Tables"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,UAAU;AACvC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrB,SAASC,MAAMA,CAAA,EAAE;EACb,MAAMC,wBAAwB,GAAGJ,gBAAgB,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAC5DD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAC7B,CAAC;EACC,MAAME,KAAK,GAAGV,gBAAgB,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IACtD,MAAMC,SAAS,GAAGF,OAAO,CAACG,MAAM,CAACV,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACS,CAAC,GAAGV,CAAC,CAACU,CAAC,CAAC;IAE3D,oBAAQd,OAAA;MAAKe,SAAS,EAAC,OAAO;MAAAC,QAAA,eAC5BhB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,eACEhB,OAAA;YAAAgB,QAAA,eACEhB,OAAA;cAAAgB,QAAA,GAAI,cAAY,EAACN,OAAO,CAACJ,IAAI;YAAA;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRpB,OAAA;UAAAgB,QAAA,EACCJ,SAAS,CAACH,GAAG,CAAC,CAACY,KAAK,EAAEC,GAAG,kBACtBtB,OAAA;YAAAgB,QAAA,gBACEhB,OAAA;cAAAgB,QAAA,EAAKK,KAAK,CAACE;YAAC;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClBpB,OAAA;cAAAgB,QAAA,EAAKK,KAAK,CAACP;YAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAFXE,GAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGR,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAf0BT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBpC,CAAC;EAEN,CAAC,CAAC;EAEJ,oBAAOpB,OAAA;IAAAgB,QAAA,EAAMR;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC3B;AAACI,EAAA,GA5BQvB,MAAM;AAkCf,eAAeA,MAAM;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}